worker_processes auto;
events {
    worker_connections 1024;
}

http {
    # Security headers
    server_tokens off;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Timeouts adjusted for ML inference
    client_body_timeout 200s;
    client_header_timeout 200s;
    keepalive_timeout 200s;
    send_timeout 200s;

    # Buffer sizes for large responses
    client_max_body_size 50M;
    client_body_buffer_size 50M;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    proxy_max_temp_file_size 0;
    proxy_http_version 1.1;

    # Rate limiting zone
    limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;

    # Upstream server
    upstream backend {
        server ${TARGET_URL};
        keepalive 32;
    }

    server {
        listen 8080;
        server_name _;

        # Rate limiting
        limit_req zone=one burst=10 nodelay;

        # Proxy settings for all locations
        location / {
            proxy_pass ${TARGET_URL};
            
            # Pass through original headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Original-URI $request_uri;
            
            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Pass through original request method
            proxy_method $request_method;
            proxy_pass_request_headers on;
            proxy_pass_request_body on;

            # Timeouts for ML inference
            proxy_connect_timeout 200s;
            proxy_send_timeout 200s;
            proxy_read_timeout 200s;

            # Don't buffer responses
            proxy_buffering off;
            
            # Allow all HTTP methods
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        }

        # Handle websocket connections
        location /ws {
            proxy_pass ${TARGET_URL};
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_read_timeout 200s;
        }
    }
} 
